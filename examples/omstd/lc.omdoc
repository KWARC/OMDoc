<?xml version="1.0" encoding="utf-8"?>



<omdoc xmlns:dc="http://purl.org/dc/elements/1.1/"  xmlns="http://omdoc.org/ns"
xml:id="lc-omdoc">


  <dc:title>The OpenMath Content Dictionary lc.ocd  in OMDoc form</dc:title>
  <dc:creator role="trl">Michael Kohlhase</dc:creator>
  <dc:creator role="ant">Olga Caprotti</dc:creator>
  <dc:date> 1999-08-20T00:00:00</dc:date>
  <dc:source>Derived from the OpenMath CD http://www.openmath.org/cd/lc.ocd.</dc:source>
  <dc:type>Text</dc:type>
  <dc:format>application/omdoc+xml</dc:format>
  <dc:rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </dc:rights>
  <dc:description>Lambda Calculus </dc:description>


<theory xml:id="lc" cdbase="http://www.openmath.org/cd">
  <symbol name="type" xml:id="type">

<dc:description> Attribution tag to denote type-judgement
  </dc:description>

</symbol>
  <presentation xml:id="pr-type" for="#type" role="key" lbrack="" rbrack="">
    <use  format="html" element="sub"/>
    <use  format="pmml" element="msub" bracket-style="lisp"/>
    <use  format="TeX" lbrack="_{" rbrack="}"/>
  </presentation>
  <symbol name="typecoerce" xml:id="typecoerce">

<dc:description> Attribution tag to denote type-judgement with coercion
  </dc:description>

</symbol>
  <symbol name="PiType" xml:id="PiType">

<dc:description> The type constructor of dependant function space.
      It binds the (type-attributed) variables in the body, that is 
      an OpenMath object.
  </dc:description>

</symbol>
  <presentation xml:id="pr-PiType" for="#PiType">
    <use  format="TeX">{\Pi}</use>
    <use  format="html|pmml">&#x003A0;</use>
  </presentation>
  <symbol name="mapsto" xml:id="mapsto">

<dc:description> The type constructor of non-dependant function space.
      The first n-1 children denote the types of the arguments, 
      the last denotes the return type. Contrary to sts:mapsto, arguments
      cannot be variables but have to be OpenMath objects that map to ground
      OpenMath terms (they contain no variables).	
  </dc:description>

</symbol>
  <presentation xml:id="pr-mapsto" for="#mapsto" role="applied" bracket-style="lisp" fixity="infix">
    <use  format="TeX">{\mapsto}</use>
    <use  format="html|pmml">&#x021A6;</use>
  </presentation>
  <symbol name="Lambda" xml:id="Lambda">

<dc:description> The abstraction constructor. It is 
      followed by a list of  variables
      and an OpenMath object.
  </dc:description>

</symbol>
  <presentation xml:id="pr-Lambda" for="#Lambda">
    <use  format="TeX">{\lambda}</use>
    <use  format="html|pmml">&#x003BB;</use>
  </presentation>
</theory>
</omdoc>
