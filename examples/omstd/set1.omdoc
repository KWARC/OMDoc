<?xml version="1.0" encoding="utf-8"?>

<omdoc xmlns:dc="http://purl.org/dc/elements/1.1/"  
       xmlns="http://omdoc.org/ns"
       xmlns:om="http://www.openmath.org/OpenMath"
       xmlns:m="http://www.w3.org/1998/Math/MathML"
       xmlns:o="http://omdoc.org/ns"
xml:id="set1-omdoc">

<metadata>
  <dc:title>The OpenMath Content Dictionary set1.ocd  in OMDoc form</dc:title>
  <dc:creator role="trl">Michael Kohlhase</dc:creator>
  <dc:creator role="ant">The OpenMath Society</dc:creator>
  <dc:date> 2001-03-12T00:00:00</dc:date>
  <dc:source>Derived from the OpenMath CD http://www.openmath.org/cd/set1.ocd.</dc:source>
  <dc:type>Text</dc:type>
  <dc:format>application/omdoc+xml</dc:format>
  <dc:rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </dc:rights>
  <dc:description>
    This CD defines the set functions and constructors for basic
    set theory. It is intended to be `compatible' with the
    corresponding elements in MathML.
  </dc:description>
</metadata>

<theory xml:id="set1">

<imports xml:id="set1-imports-sts" from="sts.omdoc#sts"/>
<imports xml:id="set1-imports-setname1" from="setname1.omdoc#setname1"/>
<imports xml:id="set1-imports-setname2" from="setname2.omdoc#setname2"/>

<symbol name="cartesian_product" xml:id="cartesian_product">
<metadata>
<dc:description>
    This symbol represents an n-ary construction function for constructing
    the Cartesian product of sets. It takes n set arguments in order to
    construct their Cartesian product.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMA>
	  <OMS cd="sts" name="nary"/>
	  <OMA>
	    <OMS cd="sts" name="structure"/>
	    <OMV name="Set"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="sts" name="structure"/>
	  <OMV name="Set1"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="cartesian_product" o:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">cartesian_product</m:csymbol>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <iterate name="args">
          <separator><m:mo o:cr="fun">×</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="emptyset" xml:id="emptyset">
<metadata>
<dc:description>
    This symbol is used to represent the empty set, that is the set which
    contains no members. It takes no parameters.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMV name="Set"/>
    </OMOBJ>
  </type>
</symbol>

  <notation>
    <prototype>
      <om:OMS cd="set1" name="emptyset"/>
    </prototype>
    <prototype>
      <m:csymbol cd="set1">emptyset</m:csymbol>
    </prototype>
    <rendering xml:lang="en"><m:mo>∅</m:mo></rendering>
  </notation>

<symbol name="map" xml:id="map">
<metadata>
<dc:description>
    This symbol represents a mapping function which may be used to
    construct sets, it takes as arguments a function from X to Y and a
    set over X in that order. The value that is returned is a set of
    values in Y. The argument list may be a set or an integer interval.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMA>
	  <OMS cd="sts" name="mapsto"/>
	  <OMS cd="sts" name="Object"/>
	  <OMS cd="sts" name="Object"/>
	</OMA>
	<OMV name="Set"/>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>

  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="map"/>
        <expr name="fun"/>
        <expr name="set"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1">map</m:csymbol>
        <expr name="fun"/>
        <expr name="set"/>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <render name="fun"/>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
	<render name="set"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="size" xml:id="size">
<metadata>
<dc:description> 
    This symbol is used to denote the number of elements in a set. It is
    either a non-negative integer, or an infinite cardinal number. The
    symbol infinity may be used for an unspecified infinite cardinal.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="CardinalNumber"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="size" o:cr="fun"/>
        <expr name="arg"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">size</m:csymbol>
        <expr name="arg"/>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <m:mo o:cr="fun">#</m:mo>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
	<render name="arg"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>


<symbol name="suchthat" xml:id="suchthat">
<metadata>
<dc:description>
    This symbol represents the suchthat function which may be used to
    construct sets, it takes two arguments. The first argument should be the
    set which contains the elements of the set we wish to represent, the
    second argument should be a predicate, that is a function from the set
    to the booleans which describes if an element is to be in the set returned.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMA>
	  <OMS name="structure" cd="sts"/>
	  <OMV name="Set"/>
	</OMA>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMV name="Set"/>
	  <OMS name="Boolean" cd="setname2"/>
	</OMA>
	<OMA>
	  <OMS name="structure" cd="sts"/>
	  <OMV name="Set"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </type>
</symbol>

  <notation>
    <prototype>
      <om:OMA>
	<om:OMS cd="set1" name="suchthat" o:cr="fun"/>
	<expr name="set"/>
	<om:OMBIND>
	  <om:OMS cd="fns1" name="lambda"/>
	  <om:OMBVAR><expr name="var"/></om:OMBVAR>
	  <expr name="scope"/>
	</om:OMBIND>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
	<m:csymbol cd="set1" o:cr="fun">suchthat</m:csymbol>
	<expr name="set"/>
	<m:bind>
	  <m:csymbol cd="fns1">lambda</m:csymbol>
	  <m:bvar><expr name="var"/></m:bvar>
	  <expr name="scope"/>
	</m:bind>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
	<m:mo o:cr="fun">{</m:mo>
	<m:mrow><render name="var"/><m:mo o:cr="fun">&#x2208;</m:mo><render name="set"/></m:mrow>
	<m:mo o:cr="fun">|</m:mo>
	<render name="scope"/>  
	<m:mo o:cr="fun">}</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="set" xml:id="set">
<metadata>
<dc:description> 
    This symbol represents the set constructor. It is an n-ary function. The
    set entries are given explicitly. There is no implied ordering to the
    elements of a set. 
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nary" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="set" o:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">set</m:csymbol>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <m:mo fence="true" o:cr="fun">{</m:mo>
        <iterate name="args">
          <separator><m:mo fence="true" o:cr="fun">,</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo fence="true" o:cr="fun">}</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="intersect" xml:id="intersect">
<metadata>
<dc:description> 
    This symbol is used to denote the n-ary intersection of sets. It takes
    sets as arguments, and denotes the set that contains all the
    elements that occur in all of them.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nassoc" cd="sts"/>
	  <OMV name="Set"/>
	</OMA>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="intersect" o:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">intersect</m:csymbol>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="500">
          <separator><m:mo o:cr="fun">∩</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="union" xml:id="union">
<metadata>
<dc:description> 
    This symbol is used to denote the n-ary union of sets. It takes
    sets as arguments, and denotes the set that contains all the
    elements that occur in any of them.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nassoc" cd="sts"/>
	  <OMV name="Set"/>
	</OMA>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="union" o:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">union</m:csymbol>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="500">
          <separator><m:mo o:cr="fun">∪</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="setdiff" xml:id="setdiff">
<metadata>
<dc:description> 
    This symbol is used to denote the set difference of two sets. It takes
    two sets as arguments, and denotes the set that contains all the
    elements that occur in the first set, but not in the second.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="setdiff" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">setdiff</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="500"/>
        <m:mo o:cr="fun">∖</m:mo>
        <render name="arg2" precedence="500"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="subset" xml:id="subset">
<metadata>
<dc:description>
    This symbol has two (set) arguments. It is used to denote that the
    first set is a subset of the second.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="subset" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">subset</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="700">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="300"/>
        <m:mo o:cr="fun">⊆</m:mo>
        <render name="arg2" precedence="300"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="in" xml:id="in">
<metadata>
<dc:description> 
    This symbol has two arguments, an element and a set. It is used to
    denote that the element is in the given set.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMS name="Object" cd="sts"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>

  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="in" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">in</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="450">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="450"/>
        <m:mo o:cr="fun">∈</m:mo>
        <render name="arg2" precedence="450"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="notin" xml:id="notin">
<metadata>
<dc:description> 
    This symbol has two arguments, an element and a set. It is used to
    denote that the element is not in the given set.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMS name="Object" cd="sts"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="notin" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">notin</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="300">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="300"/>
        <m:mo o:cr="fun">∉</m:mo>
        <render name="arg2" precedence="300"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="prsubset" xml:id="prsubset">
<metadata>
<dc:description> 
    This symbol has two (set) arguments. It is used to denote that the
    first set is a proper subset of the second, that is a subset of the
    second set but not actually equal to it.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="prsubset" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">prsubset</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="300">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="300"/>
        <m:mo o:cr="fun">⊊</m:mo>
        <render name="arg2" precedence="300"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="notsubset" xml:id="notsubset">
<metadata>
<dc:description> 
    This symbol has two (set) arguments. It is used to denote that the
    first set is not a subset of the second.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="notsubset" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">notsubset</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="300">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="300"/>
        <m:mo o:cr="fun">⊈</m:mo>
        <render name="arg2" precedence="300"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<symbol name="notprsubset" xml:id="notprsubset">
<metadata>
<dc:description> 
    This symbol has two (set) arguments. It is used to denote that the
    first set is not a proper subset of the second. A proper subset of a
    set is a subset of the set but not actually equal to it.
</dc:description>
</metadata>
<type system="sts.omdoc#sts">
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMV name="Set"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
  <notation>
    <prototype>
      <om:OMA>
        <om:OMS cd="set1" name="notprsubset" o:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="set1" o:cr="fun">notprsubset</m:csymbol>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering precedence="700">
      <m:mrow>
        <m:mo o:egroup="fence" fence="true">(</m:mo>
        <render name="arg1" precedence="300"/>
        <m:mo o:cr="fun">⊄</m:mo>
        <render name="arg2" precedence="300"/>
        <m:mo o:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>

<theory xml:id="set1-nonconstitutive">
<imports from="quant1.omdoc#quant1"/>
<imports from="logic1.omdoc#logic1"/>
<imports from="nums1.omdoc#nums1"/>
<imports from="interval1.omdoc#interval1"/>
<imports from="fns1.omdoc#fns1"/>
<imports from="arith1.omdoc#arith1"/>
<imports from="alg1.omdoc#alg1"/>
<imports from="relation1.omdoc#relation1"/>

<example xml:id="cartesian_product-ex-1" type="for" for="#cartesian_product">
  <CMP>An example to show the representation of the Cartesian product of sets: AxBxC.</CMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMA>
      <OMS cd="set1" name="cartesian_product"/>
      <OMV name="A"/>
      <OMV name="B"/>
      <OMV name="C"/>
    </OMA>
  </OMOBJ>
</example>
<assertion xml:id="emptyset-prop-1" type="lemma">
  <CMP> The intersection of A with the emptyset is the emptyset </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="set1" name="intersect"/>
	  <OMV name="A"/>
	  <OMS cd="set1" name="emptyset"/>
	</OMA>
	<OMS cd="set1" name="emptyset"/>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="emptyset-prop-3" type="lemma">
  <CMP> The union of A with the emptyset is A </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="set1" name="union"/>
	  <OMV name="A"/>
	  <OMS cd="set1" name="emptyset"/>
	</OMA>
	<OMV name="A"/>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="emptyset-prop-5" type="lemma">
  <CMP> the size of the empty set is zero </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="set1" name="size"/>
	  <OMS cd="set1" name="emptyset"/>
	</OMA>
	<OMS cd="alg1" name="zero"/>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example xml:id="map-ex-1" type="for" for="#map">
  <CMP>
    The set of even values between 0 and 20, that is the values 2x, where
    x ranges over the integral interval [0,10]. </CMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMA>
      <OMS cd="set1" name="map"/>
      <OMBIND>
	<OMS cd="fns1" name="lambda"/>
	<OMBVAR>
	  <OMV name="x"/>
	</OMBVAR>
	<OMA>
	  <OMS cd="arith1" name="times"/>
	  <OMI> 2 </OMI>
	  <OMV name="x"/>
	</OMA>
      </OMBIND>
      <OMA>
	<OMS cd="interval1" name="integer_interval"/>
	<OMI> 0 </OMI>
	<OMI> 10 </OMI>
      </OMA>
    </OMA>
  </OMOBJ>
</example>
<example xml:id="size-ex-1" type="for" for="#size">
  <CMP>The size of the set{3,6,9} = 3</CMP>

<OMOBJ xmlns="http://www.openmath.org/OpenMath">
  <OMA>
    <OMS cd="relation1" name="eq"/>
    <OMA>
      <OMS cd="set1" name="size"/>
      <OMA>
	<OMS cd="set1" name="set"/>
	<OMI> 3 </OMI>
	<OMI> 6 </OMI>
	<OMI> 9 </OMI>
      </OMA>
    </OMA>
    <OMI> 3 </OMI>
  </OMA>
</OMOBJ>
</example>
<example xml:id="size-ex-2" type="for" for="#size">
  <CMP>The size of the set of integers is infinite</CMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMA>
      <OMS cd="relation1" name="eq"/>
      <OMA>
	<OMS cd="set1" name="size"/>
	<OMS cd="setname1" name="Z"/>
      </OMA>
      <OMS cd="nums1" name="infinity"/>
    </OMA>
  </OMOBJ>
</example>
<example xml:id="suchthat-ex-1" type="for" for="#suchthat">
  <CMP>
    This example shows how to construct the set of even integers, using
    the suchthat constructor.</CMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMA>
      <OMS cd="set1" name="suchthat"/>
      <OMS cd="setname1" name="Z"/>
      <OMBIND>
	<OMS cd="fns1" name="lambda"/>
	<OMBVAR> <OMV name="x"/> </OMBVAR>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMA>
	    <OMS cd="arith1" name="divide"/>
	    <OMV name="x"/>
	    <OMI> 2 </OMI>
	  </OMA>
	  <OMS cd="setname1" name="Z"/>
	</OMA>
      </OMBIND>
    </OMA>
  </OMOBJ>
</example>
<example xml:id="set-ex-1" type="for" for="#set">
  <CMP>The set {3, 6, 9}</CMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 3 </OMI>
      <OMI> 6 </OMI>
      <OMI> 9 </OMI>
    </OMA>
  </OMOBJ>
</example>
<assertion xml:id="intersect-prop-1" type="lemma">
  <CMP>
    (A intersect B) is a subset of A and (A intersect B) is a subset of B
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="and"/>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMA>
	    <OMS cd="set1" name="intersect"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	  <OMV name="A"/>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMA>
	    <OMS cd="set1" name="intersect"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	  <OMV name="B"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="union-prop-1" type="lemma">
  <CMP> A is a subset of (A union B) and B is a subset of (A union B) </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="and"/>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMV name="A"/>
	  <OMA>
	    <OMS cd="set1" name="union"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMV name="B"/>
	  <OMA>
	    <OMS cd="set1" name="union"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="union-prop-3" type="lemma">
  <CMP>
    for all sets A,B and C

union(A,intersect(B,C)) = intersect(union(A,B),union(A,C))
</CMP>
<FMP>
  <OMOBJ xmlns="http://www.openmath.org/OpenMath">
    <OMBIND>
      <OMS cd="quant1" name="forall"/>
      <OMBVAR>
	<OMV name="A"/>
	<OMV name="B"/>
	<OMV name="C"/>
      </OMBVAR>
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="set1" name="union"/>
	  <OMV name="A"/>
	  <OMA>
	    <OMS cd="set1" name="intersect"/>
	    <OMV name="B"/>
	    <OMV name="C"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="intersect"/>
	  <OMA>
	    <OMS cd="set1" name="union"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	  <OMA>
	    <OMS cd="set1" name="union"/>
	    <OMV name="A"/>
	    <OMV name="C"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMBIND>
  </OMOBJ>
</FMP>
</assertion>
<assertion xml:id="setdiff-prop-1" type="lemma">
  <CMP>
    the difference of A and B is a subset of A
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="set1" name="subset"/>
	<OMA>
	  <OMS cd="set1" name="setdiff"/>
	  <OMV name="A"/>
	  <OMV name="B"/>
	</OMA>
	<OMV name="A"/>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="subset-prop-1" type="lemma">
  <CMP>
    if B is a subset of A and C is a subset of B then C is a subset of A
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="logic1" name="and"/>
	  <OMA>
	    <OMS cd="set1" name="subset"/>
	    <OMV name="B"/>
	    <OMV name="A"/>
	  </OMA>
	  <OMA>
	    <OMS cd="set1" name="subset"/>
	    <OMV name="C"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMV name="C"/>
	  <OMV name="A"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="in-prop-1" type="lemma">
  <CMP>
    if a is in A and a is in B then a is in A intersect B
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="logic1" name="and"/>
	  <OMA>
	    <OMS cd="set1" name="in"/>
	    <OMV name="a"/>
	    <OMV name="A"/>
	  </OMA>
	  <OMA>
	    <OMS cd="set1" name="in"/>
	    <OMV name="a"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMV name="a"/>
	  <OMA>
	    <OMS cd="set1" name="intersect"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<assertion xml:id="notin-prop-1" type="lemma">
  <CMP>
    if a is a member of a then it is not true that a is not a member of A
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMV name="a"/>
	  <OMV name="A"/>
	</OMA>
	<OMA>
	  <OMS cd="logic1" name="not"/>
	  <OMA>
	    <OMS cd="set1" name="notin"/>
	    <OMV name="a"/>
	    <OMV name="A"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example xml:id="notin-ex-3" type="for" for="#notin">
  <CMP> 4 is not in {1,2,3}</CMP>

<OMOBJ xmlns="http://www.openmath.org/OpenMath">
  <OMA>
    <OMS cd="set1" name="notin"/>
    <OMI> 4 </OMI>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 1 </OMI>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
  </OMA>
</OMOBJ>
</example>
<assertion xml:id="prsubset-prop-1" type="lemma">
  <CMP>
    A is a proper subset of B implies that A is a subset of B and A not= B
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="prsubset"/>
	  <OMV name="A"/>
	  <OMV name="B"/>
	</OMA>
	<OMA>
	  <OMS cd="logic1" name="and"/>
	  <OMA>
	    <OMS cd="set1" name="subset"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	  <OMA>
	    <OMS cd="relation1" name="neq"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example xml:id="prsubset-ex-3" type="for" for="#prsubset">
  <CMP>  {2,3} is a proper subset of {1,2,3}</CMP>

<OMOBJ xmlns="http://www.openmath.org/OpenMath">
  <OMA>
    <OMS cd="set1" name="prsubset"/>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 1 </OMI>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
  </OMA>
</OMOBJ>
</example>

<assertion xml:id="notsubset-prop-1" type="lemma">
  <CMP>
    if A is not a subset of B then 
    there exists an x in B s.t. x is not a member of B
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="notsubset"/>
	  <OMV name="A"/>
	  <OMV name="B"/>
	</OMA>
	<OMBIND>
	  <OMS cd="quant1" name="exists"/>
	  <OMBVAR>
	    <OMV name="x"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="logic1" name="and"/>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="x"/>
	      <OMV name="B"/>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="notin"/>
	      <OMV name="x"/>
	      <OMV name="A"/>
	    </OMA>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example xml:id="notsubset-ex-3" type="for" for="#notsubset">
  <CMP>  {2,3,4} is not a subset of {1,2,3}</CMP>

<OMOBJ xmlns="http://www.openmath.org/OpenMath">
  <OMA>
    <OMS cd="set1" name="notsubset"/>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
      <OMI> 4 </OMI>
    </OMA>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 1 </OMI>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
  </OMA>
</OMOBJ>
</example>
<assertion xml:id="notprsubset-prop-1" type="lemma">
  <CMP>
    A is not a proper subset of B implies 
    that it is not true that A is a proper subset of B
  </CMP>
  <FMP>
    <OMOBJ xmlns="http://www.openmath.org/OpenMath">
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="notprsubset"/>
	  <OMV name="A"/>
	  <OMV name="B"/>
	</OMA>
	<OMA>
	  <OMS cd="logic1" name="not"/>
	  <OMA>
	    <OMS cd="set1" name="prsubset"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example xml:id="notprsubset-ex-3" type="for" for="#notprsubset">
  <CMP>{1,2,3} is not a proper subset of {1,2,3}</CMP>

<OMOBJ xmlns="http://www.openmath.org/OpenMath">
  <OMA>
    <OMS cd="set1" name="notprsubset"/>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 1 </OMI>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
    <OMA>
      <OMS cd="set1" name="set"/>
      <OMI> 1 </OMI>
      <OMI> 2 </OMI>
      <OMI> 3 </OMI>
    </OMA>
  </OMA>
</OMOBJ>
</example>
</theory>
</theory>
</omdoc>

