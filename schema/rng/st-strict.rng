<?xml version="1.0" encoding="UTF-8"?>
<!-- A RelaxNG schema for Open Mathematical documents (OMDoc 1.6) Module ST -->
<!--
  $Id: st-strict.rnc 8432 2009-07-19 13:18:40Z kohlhase $
  $HeadURL: https://svn.omdoc.org/repos/omdoc/trunk/schema/rnc/st-strict.rnc $
  See the documentation and examples at http://www.omdoc.org
  Copyright (c) 2004-2007 Michael Kohlhase, released under the GNU Public License (GPL) 
-->
<grammar ns="http://omdoc.org/ns" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="theory.attribs">
    <interleave>
      <ref name="name.attrib"/>
      <optional>
        <attribute name="meta">
          <ref name="MMTURI"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <define name="theory.class">
    <interleave>
      <zeroOrMore>
        <ref name="theory"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="include"/>
      </zeroOrMore>
      <ref name="constitutive"/>
      <zeroOrMore>
        <ref name="structure"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="omtext"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="theory.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="theory.class"/>
  </define>
  <define name="theory">
    <element name="theory">
      <interleave>
        <ref name="theory.attribs"/>
        <ref name="theory.model"/>
      </interleave>
    </element>
  </define>
  <define name="type.attribs">
    <empty/>
  </define>
  <define name="type.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="mobj"/>
  </define>
  <define name="type">
    <element name="type">
      <interleave>
        <ref name="type.attribs"/>
        <ref name="type.model"/>
      </interleave>
    </element>
  </define>
  <define name="supertype.attribs">
    <empty/>
  </define>
  <define name="supertype.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="mobj"/>
  </define>
  <define name="supertype">
    <element name="supertype">
      <interleave>
        <ref name="supertype.attribs"/>
        <ref name="supertype.model"/>
      </interleave>
    </element>
  </define>
  <define name="sdef.attribs">
    <empty/>
  </define>
  <define name="sdef.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="mobj"/>
  </define>
  <define name="sdef">
    <element name="definition">
      <interleave>
        <ref name="sdef.attribs"/>
        <ref name="sdef.model"/>
      </interleave>
    </element>
  </define>
  <define name="arguments">
    <choice>
      <data type="integer"/>
      <value>*</value>
    </choice>
  </define>
  <define name="constant.attribs">
    <interleave>
      <ref name="name.attrib"/>
      <optional>
        <attribute name="arguments">
          <ref name="arguments"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <define name="constant.class">
    <interleave>
      <optional>
        <ref name="type"/>
      </optional>
      <optional>
        <ref name="supertype"/>
      </optional>
      <optional>
        <ref name="sdef"/>
      </optional>
    </interleave>
  </define>
  <define name="constant.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="constant.class"/>
  </define>
  <define name="constitutive">
    <zeroOrMore>
      <element name="constant">
        <interleave>
          <ref name="constant.attribs"/>
          <optional>
            <attribute name="role">
              <ref name="consrole"/>
            </attribute>
          </optional>
          <ref name="constant.model"/>
        </interleave>
      </element>
    </zeroOrMore>
  </define>
  <define name="nonconstit">
    <zeroOrMore>
      <element name="constant">
        <interleave>
          <ref name="constant.attribs"/>
          <optional>
            <attribute name="role">
              <ref name="noncrole"/>
            </attribute>
          </optional>
          <ref name="constant.model"/>
        </interleave>
      </element>
    </zeroOrMore>
  </define>
  <define name="noncrole">
    <choice>
      <value>theorem</value>
      <value>proof</value>
    </choice>
  </define>
  <define name="synrole">
    <choice>
      <value>binder</value>
      <value>semantic-attribution</value>
      <value>attribution</value>
      <value>key</value>
    </choice>
  </define>
  <define name="consrole">
    <choice>
      <value>element</value>
      <value>sort</value>
      <value>axiom</value>
      <value>judgment</value>
      <value>error</value>
      <value>errortype</value>
      <value>level</value>
      <ref name="synrole"/>
      <ref name="noncrole"/>
    </choice>
  </define>
  <define name="conass.attribs">
    <ref name="name.attrib"/>
  </define>
  <define name="conass.model">
    <ref name="mobj"/>
  </define>
  <define name="conass">
    <element name="conass">
      <interleave>
        <ref name="conass.attribs"/>
        <ref name="conass.model"/>
      </interleave>
    </element>
  </define>
  <define name="strass.attribs">
    <ref name="name.attrib"/>
  </define>
  <define name="strass.model">
    <ref name="morphism"/>
  </define>
  <define name="strass">
    <element name="strass">
      <interleave>
        <ref name="strass.attribs"/>
        <ref name="strass.model"/>
      </interleave>
    </element>
  </define>
  <define name="assignment">
    <choice>
      <ref name="conass"/>
      <ref name="strass"/>
    </choice>
  </define>
  <define name="structure.attribs">
    <interleave>
      <ref name="name.attrib"/>
      <ref name="from.attrib"/>
    </interleave>
  </define>
  <define name="structure.class">
    <choice>
      <zeroOrMore>
        <choice>
          <ref name="include"/>
          <ref name="assignment"/>
        </choice>
      </zeroOrMore>
      <element name="definition">
        <ref name="morphism"/>
      </element>
    </choice>
  </define>
  <define name="structure.model">
    <optional>
      <ref name="metadata"/>
    </optional>
    <ref name="structure.class"/>
  </define>
  <define name="structure">
    <element name="structure">
      <ref name="structure.attribs"/>
      <ref name="structure.model"/>
    </element>
  </define>
  <define name="view.attribs">
    <interleave>
      <ref name="structure.attribs"/>
      <ref name="to.attrib"/>
    </interleave>
  </define>
  <define name="view.model">
    <ref name="structure.model"/>
  </define>
  <define name="view">
    <element name="view">
      <interleave>
        <ref name="view.attribs"/>
        <ref name="view.model"/>
      </interleave>
    </element>
  </define>
  <define name="include">
    <element name="include">
      <ref name="from.attrib"/>
    </element>
  </define>
  <define name="omdoc.class" combine="interleave">
    <interleave>
      <zeroOrMore>
        <ref name="theory"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="view"/>
      </zeroOrMore>
      <ref name="nonconstit"/>
    </interleave>
  </define>
</grammar>
